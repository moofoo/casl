{"version":3,"file":"index.js","sources":["../../src/Can.ts","../../src/factory.ts","../../src/hooks/useAbility.ts"],"sourcesContent":["import { Children, ReactNodeArray, PureComponent, Fragment, createElement } from 'react';\nimport {\n  Unsubscribe,\n  AbilityTuple,\n  SubjectType,\n  AnyAbility,\n  Generics,\n  Abilities,\n  IfString,\n} from '@casl/ability';\n\nconst noop = () => {};\nconst renderChildren = Fragment\n  ? (children?: ReactNodeArray) => {\n    if (!children) {\n      return null;\n    }\n\n    return children.length > 1\n      ? createElement(Fragment, null, ...children)\n      : Children.only(children);\n  }\n  : Children.only;\n\ntype AbilityCanProps<\n  T extends Abilities,\n  Else = IfString<T, { do: T } | { I: T }>\n> = T extends AbilityTuple\n  ? { do: T[0], on: T[1], field?: string } |\n  { I: T[0], a: Extract<T[1], SubjectType>, field?: string } |\n  { I: T[0], an: Extract<T[1], SubjectType>, field?: string } |\n  { I: T[0], this: Exclude<T[1], SubjectType>, field?: string }\n  : Else;\n\ninterface ExtraProps {\n  not?: boolean\n  passThrough?: boolean\n}\n\ninterface CanExtraProps<T extends AnyAbility> extends ExtraProps {\n  ability: T\n}\n\ninterface BoundCanExtraProps<T extends AnyAbility> extends ExtraProps {\n  ability?: T\n}\n\nexport type CanProps<T extends AnyAbility> =\n  AbilityCanProps<Generics<T>['abilities']> & CanExtraProps<T>;\nexport type BoundCanProps<T extends AnyAbility> =\n  AbilityCanProps<Generics<T>['abilities']> & BoundCanExtraProps<T>;\n\nexport class Can<\n  T extends AnyAbility,\n  IsBound extends boolean = false\n> extends PureComponent<IsBound extends true ? BoundCanProps<T> : CanProps<T>> {\n  private _isAllowed: boolean = false;\n  private _ability: T | null = null;\n  private _unsubscribeFromAbility: Unsubscribe = noop;\n\n  componentWillUnmount() {\n    this._unsubscribeFromAbility();\n  }\n\n  private _connectToAbility(ability?: T) {\n    if (ability === this._ability) {\n      return;\n    }\n\n    this._unsubscribeFromAbility();\n    this._ability = null;\n\n    if (ability) {\n      this._ability = ability;\n      this._unsubscribeFromAbility = ability.on('updated', () => this.forceUpdate());\n    }\n  }\n\n  get allowed() {\n    return this._isAllowed;\n  }\n\n  private _canRender(): boolean {\n    const props: any = this.props;\n    const subject = props.of || props.a || props.an || props.this || props.on;\n    const can = props.not ? 'cannot' : 'can';\n\n    return props.ability[can](props.I || props.do, subject, props.field);\n  }\n\n  render() {\n    this._connectToAbility(this.props.ability);\n    this._isAllowed = this._canRender();\n    return this.props.passThrough || this._isAllowed ? this._renderChildren() : null;\n  }\n\n  private _renderChildren() {\n    const { children, ability } = this.props;\n    const elements = typeof children === 'function'\n      ? children(this._isAllowed, ability)\n      : children;\n\n    return renderChildren(elements);\n  }\n}\n","import { createElement as h, ComponentClass, Consumer, StatelessComponent } from 'react';\nimport { AnyAbility } from '@casl/ability';\nimport { Can, BoundCanProps } from './Can';\n\ninterface BoundCanClass<T extends AnyAbility> extends ComponentClass<BoundCanProps<T>> {\n  new (props: BoundCanProps<T>, context?: any): Can<T, true>\n}\n\nexport function createCanBoundTo<T extends AnyAbility>(ability: T): BoundCanClass<T> {\n  return class extends Can<T, true> {\n    static defaultProps = { ability } as BoundCanClass<T>['defaultProps'];\n  };\n}\n\nexport function createContextualCan<T extends AnyAbility>(\n  Getter: Consumer<T>\n): StatelessComponent<BoundCanProps<T>> {\n  return (props: BoundCanProps<T>) => h(Getter, null, (ability: T) => h(Can, {\n    ability,\n    ...props,\n  } as any));\n}\n","import React from 'react';\nimport { AnyAbility } from '@casl/ability';\n\nexport function useAbility<T extends AnyAbility>(context: React.Context<T>): T {\n  if (process.env.NODE_ENV !== 'production' && typeof React.useContext !== 'function') {\n    /* istanbul ignore next */\n    throw new Error('You must use React >= 16.8 in order to use useAbility()');\n  }\n\n  const ability = React.useContext<T>(context);\n  const [rules, setRules] = React.useState<T['rules']>();\n\n  React.useEffect(() => ability.on('updated', (event) => {\n    if (event.rules !== rules) {\n      setRules(event.rules);\n    }\n  }), []);\n\n  return ability;\n}\n"],"names":["noop","renderChildren","Fragment","children","length","createElement","Children","only","Can","_isAllowed","_ability","_unsubscribeFromAbility","componentWillUnmount","_connectToAbility","ability","on","forceUpdate","_canRender","props","subject","of","a","an","this","can","not","I","do","field","render","passThrough","_renderChildren","elements","PureComponent","createCanBoundTo","defaultProps","createContextualCan","Getter","h","useAbility","context","process","env","NODE_ENV","React","useContext","Error","useState","rules","setRules","useEffect","event"],"mappings":"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"}